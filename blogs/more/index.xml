<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogs on My New Hugo Site</title><link>https://dhruvagole.tech/blogs/more/</link><description>Recent content in Blogs on My New Hugo Site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://dhruvagole.tech/blogs/more/index.xml" rel="self" type="application/rss+xml"/><item><title>OLED Temperature</title><link>https://dhruvagole.tech/blogs/more/temp_oled/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dhruvagole.tech/blogs/more/temp_oled/</guid><description>Intro Schematics Source code /********************************************************************/ // First we include the libraries #include &amp;lt;OneWire.h&amp;gt;#include &amp;lt;DallasTemperature.h&amp;gt;/********************************************************************/ // Data wire is plugged into pin 2 on the Arduino #define ONE_WIRE_BUS 2 /********************************************************************/ // Setup a oneWire instance to communicate with any OneWire devices // (not just Maxim/Dallas temperature ICs) OneWire oneWire(ONE_WIRE_BUS); /********************************************************************/ // Pass our oneWire reference to Dallas Temperature. DallasTemperature sensors(&amp;amp;oneWire); /********************************************************************/ /* OLED Part */ #include &amp;#34;U8glib.h&amp;#34;U8GLIB_SH1106_128X64 u8g(U8G_I2C_OPT_NONE); void draw(void) { // call sensors.</description></item></channel></rss>